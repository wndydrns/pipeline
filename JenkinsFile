pipeline {
    agent any

    // SCM trigger 설정
    triggers {
        pollSCM('* * * * *')
    }
	
    // Get Artifactory server instance, defined in the Artifactory Plugin administration page.
    def server = Artifactory.server "SERVER_ID"
    // Create an Artifactory Gradle instance.
    def rtGradle = Artifactory.newGradleBuild()
    def buildInfo
	
    stages {
        stage('Params Check ') {
            steps {
    			println "Will deploy to ${DEPLOY_ENV}"
    			println "JAVA_VERSION = ${JAVA_VERSION}"
    			println "GRADLE_VERSION = ${GRADLE_VERSION}"
    			
    			
			    //env.JAVA_HOME="${tool name : JAVA_VERSION}"
			    //env.PATH="${env.JAVA_HOME}/bin:${env.PATH}"
			}
        }
        
	    stage('Clone sources') {
	        git url: 'https://github.com/wndydrns/pipeline.git'
	    }

	    stage('Artifactory configuration') {
	        // Tool name from Jenkins configuration
	        rtGradle.tool = "gradle-4.10.3"
	        // Set Artifactory repositories for dependencies resolution and artifacts deployment.
	        rtGradle.deployer repo:'ext-release-local', server: server
	        rtGradle.resolver repo:'remote-repos', server: server
	    }

	    stage('Gradle build') {
	        buildInfo = rtGradle.run rootDir: "pipeline/", buildFile: 'build.gradle', tasks: 'clean artifactoryPublish'
	    }

	    stage('Publish build info') {
	        server.publishBuildInfo buildInfo
	    }
    }
}