pipeline {
    agent any

    // SCM trigger 설정
    triggers {
        pollSCM('* * * * *')
    }

    stages {
        /*
        stage('Kill previous instance') {
            steps {
                // 기존 포트(9090)에 떠있는 프로세스를 찾아 taskkill로 죽인다.
                bat 'set PID=0\n' +
                        'FOR /F \"tokens=5 delims= \" %%P IN (\'netstat -ano ^| findstr :9090\') DO SET /A PID=%%P\n' +
                        'IF /I \"%PID%\" GEQ \"1\" (\n' +
                        '    TaskKill /F /PID %PID%\n' +
                        ')'
                bat 'ping 127.0.0.1 -n 11 > nul'
            }
        }
		*/
		
        stage('params') {
            steps {
                println "Will deploy to ${DEPLOY_ENV}"
                println "JAVA_VERSION = ${JAVA_VERSION}"
                println "GRADLE_VERSION = ${GRADLE_VERSION}"
            }
        }
        /*
        stage('Refresh gradle dependency') {
            steps {
                // gradle dependency 업데이트
                bat 'gradlew --refresh-dependencies'
            }
        }
		*/
        stage('Build') {
            steps {
                bat 'gradlew build'
            }
        }

        stage('Start service') {
            steps {
                bat "start java -jar build/libs/pipeline-0.0.1-SNAPSHOT.jar ${DEPLOY_ENV} ${JAVA_VERSION}"
            }
        }
    }
}