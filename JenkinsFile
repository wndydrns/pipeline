pipeline {
    agent any

    // SCM trigger 설정
    triggers {
        pollSCM('* * * * *')
    }

    stages {
        stage('Kill previous instance') {
            steps {
                // 기존 포트(9090)에 떠있는 프로세스를 찾아 taskkill로 죽인다.
                bat 'set PID=0\n' +
                        'FOR /F \"tokens=5 delims= \" %%P IN (\'netstat -ano ^| findstr :9090\') DO SET /A PID=%%P\n' +
                        'IF /I \"%PID%\" GEQ \"1\" (\n' +
                        '    TaskKill /F /PID %PID%\n' +
                        ')'
                bat 'ping 127.0.0.1 -n 11 > nul'
            }
        }

        stage('Refresh gradle dependency') {
            steps {
                // gradle dependency 업데이트
                bat 'gradlew --refresh-dependencies'
            }
        }

        stage('Build') {
            steps {
                bat 'gradlew build'
            }
        }

        stage('Start service') {
            steps {
                bat 'start java -jar build/libs/pipeline-0.0.1-SNAPSHOT.jar'
            }
        }
        
        
		/*
        stage('Unit test') {
            steps {
                bat 'D:\YBM\IDE\bin\gradle-4.10.3\gradlew clean test'
            }
        }

        stage('Component test') {
            steps {
                bat 'D:\YBM\IDE\bin\gradle-4.10.3\gradlew componentTest'
            }
        }

        stage('Contract test') {
            steps {
                script {
                    String currentDirectory = pwd()
                    try {
                        bat 'D:\YBM\IDE\bin\gradle-4.10.3\gradlew contractTest'
                    }

                    catch (err) {
                        // 실패하는 경우,
                        bat 'D:\YBM\IDE\bin\gradle-4.10.3\gradlew updateContractTestResult --from=decision --reportPath=\"' + currentDirectory + '\\build\\reports\\tests\\contractTest\\packages\"'
                        error("Contract Test Failed!")
                    }
                }
            }
        }

        stage('Upload contract test result') {
            steps {
                script {
                    String currentDirectory = pwd()
                    bat 'gradlew updateContractTestResult --from=decision --reportPath=\"' + currentDirectory + '\\build\\reports\\tests\\contractTest\\packages\"'
                }
            }
        }
        */
    }
}